{"ast":null,"code":"import _defineProperty from \"/Users/flatironloanerstudent/Desktop/birdbox-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_CHIRPS, LIKE_CHIRP, UNLIKE_CHIRP, LOADING_DATA, DELETE_CHIRP, POST_CHIRP, SET_CHIRP, SUBMIT_COMMENT } from '../types';\nconst initialState = {\n  chirps: [],\n  chirp: {},\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOADING_DATA:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case SET_CHIRPS:\n      return _objectSpread({}, state, {\n        chirps: action.payload,\n        loading: false\n      });\n\n    case SET_CHIRP:\n      return _objectSpread({}, state, {\n        chirp: action.payload\n      });\n\n    case LIKE_CHIRP:\n    case UNLIKE_CHIRP:\n      var index = state.chirps.findIndex(chirp => chirp.chirpId === action.payload.chirpId);\n      state.chirps[index] = action.payload;\n\n      if (state.chirp.chirpId === action.payload.chirpId) {\n        state.chirp = action.payload;\n      }\n\n      return _objectSpread({}, state);\n\n    case DELETE_CHIRP:\n      index = state.chirps.findIndex(chirp => chirp.chirpId === action.payload);\n      state.chirps.splice(index, 1);\n      return _objectSpread({}, state);\n\n    case POST_CHIRP:\n      return _objectSpread({}, state, {\n        chirps: [action.payload, ...state.chirps]\n      });\n\n    case SUBMIT_COMMENT:\n      return _objectSpread({}, state, {\n        chirp: _objectSpread({}, state.chirp, {\n          comments: [action.payload, ...state.chirp.comments]\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/flatironloanerstudent/Desktop/birdbox-client/src/redux/reducers/dataReducer.js"],"names":["SET_CHIRPS","LIKE_CHIRP","UNLIKE_CHIRP","LOADING_DATA","DELETE_CHIRP","POST_CHIRP","SET_CHIRP","SUBMIT_COMMENT","initialState","chirps","chirp","loading","state","action","type","payload","index","findIndex","chirpId","splice","comments"],"mappings":";;;;;;AAAA,SACCA,UADD,EAECC,UAFD,EAGCC,YAHD,EAICC,YAJD,EAKCC,YALD,EAMCC,UAND,EAOCC,SAPD,EAQCC,cARD,QASO,UATP;AAWA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,MAAM,EAAE,EADY;AAEpBC,EAAAA,KAAK,EAAE,EAFa;AAGpBC,EAAAA,OAAO,EAAE;AAHW,CAArB;AAMA,eAAe,UACdC,KAAK,GAAGJ,YADM,EAEdK,MAFc,EAGb;AACD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKX,YAAL;AACC,+BACIS,KADJ;AAECD,QAAAA,OAAO,EAAE;AAFV;;AAID,SAAKX,UAAL;AACC,+BACIY,KADJ;AAECH,QAAAA,MAAM,EAAEI,MAAM,CAACE,OAFhB;AAGCJ,QAAAA,OAAO,EAAE;AAHV;;AAKD,SAAKL,SAAL;AACC,+BACIM,KADJ;AAECF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFf;;AAID,SAAKd,UAAL;AACA,SAAKC,YAAL;AACC,UAAIc,KAAK,GAAGJ,KAAK,CAACH,MAAN,CAAaQ,SAAb,CACVP,KAAD,IACCA,KAAK,CAACQ,OAAN,KAAkBL,MAAM,CAACE,OAAP,CAAeG,OAFvB,CAAZ;AAIAN,MAAAA,KAAK,CAACH,MAAN,CAAaO,KAAb,IAAsBH,MAAM,CAACE,OAA7B;;AACA,UACCH,KAAK,CAACF,KAAN,CAAYQ,OAAZ,KACAL,MAAM,CAACE,OAAP,CAAeG,OAFhB,EAGE;AACDN,QAAAA,KAAK,CAACF,KAAN,GAAcG,MAAM,CAACE,OAArB;AACA;;AACD,+BACIH,KADJ;;AAGD,SAAKR,YAAL;AACGY,MAAAA,KAAK,GAAGJ,KAAK,CAACH,MAAN,CAAaQ,SAAb,CACRP,KAAD,IACCA,KAAK,CAACQ,OAAN,KAAkBL,MAAM,CAACE,OAFjB,CAAR;AAIFH,MAAAA,KAAK,CAACH,MAAN,CAAaU,MAAb,CAAoBH,KAApB,EAA2B,CAA3B;AACA,+BACIJ,KADJ;;AAGD,SAAKP,UAAL;AACC,+BACIO,KADJ;AAECH,QAAAA,MAAM,EAAE,CAACI,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACH,MAA1B;AAFT;;AAID,SAAKF,cAAL;AACC,+BACIK,KADJ;AAECF,QAAAA,KAAK,oBACDE,KAAK,CAACF,KADL;AAEJU,UAAAA,QAAQ,EAAE,CACTP,MAAM,CAACE,OADE,EAET,GAAGH,KAAK,CAACF,KAAN,CAAYU,QAFN;AAFN;AAFN;;AAUD;AACC,aAAOR,KAAP;AA3DF;AA6DA","sourcesContent":["import {\n\tSET_CHIRPS,\n\tLIKE_CHIRP,\n\tUNLIKE_CHIRP,\n\tLOADING_DATA,\n\tDELETE_CHIRP,\n\tPOST_CHIRP,\n\tSET_CHIRP,\n\tSUBMIT_COMMENT\n} from '../types';\n\nconst initialState = {\n\tchirps: [],\n\tchirp: {},\n\tloading: false\n};\n\nexport default function(\n\tstate = initialState,\n\taction\n) {\n\tswitch (action.type) {\n\t\tcase LOADING_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true\n\t\t\t};\n\t\tcase SET_CHIRPS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tchirps: action.payload,\n\t\t\t\tloading: false\n\t\t\t};\n\t\tcase SET_CHIRP:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tchirp: action.payload\n\t\t\t};\n\t\tcase LIKE_CHIRP:\n\t\tcase UNLIKE_CHIRP:\n\t\t\tvar index = state.chirps.findIndex(\n\t\t\t\t(chirp) =>\n\t\t\t\t\tchirp.chirpId === action.payload.chirpId\n\t\t\t);\n\t\t\tstate.chirps[index] = action.payload;\n\t\t\tif (\n\t\t\t\tstate.chirp.chirpId ===\n\t\t\t\taction.payload.chirpId\n\t\t\t) {\n\t\t\t\tstate.chirp = action.payload;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\t\tcase DELETE_CHIRP:\n\t\t   index = state.chirps.findIndex(\n\t\t\t\t(chirp) =>\n\t\t\t\t\tchirp.chirpId === action.payload\n\t\t\t);\n\t\t\tstate.chirps.splice(index, 1);\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\t\tcase POST_CHIRP:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tchirps: [action.payload, ...state.chirps]\n\t\t\t};\n\t\tcase SUBMIT_COMMENT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tchirp: {\n\t\t\t\t\t...state.chirp,\n\t\t\t\t\tcomments: [\n\t\t\t\t\t\taction.payload,\n\t\t\t\t\t\t...state.chirp.comments\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"/Users/flatironloanerstudent/Desktop/birdbox-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/flatironloanerstudent/Desktop/birdbox-client/src/components/chirp/CommentForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles'; // MUI Stuff\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField'; // Redux stuff\n\nimport { connect } from 'react-redux';\nimport { submitComment } from '../../redux/actions/dataActions';\n\nconst styles = theme => _objectSpread({}, theme);\n\nclass CommentForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      body: '',\n      errors: {}\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.submitComment(this.props.screamId, {\n        body: this.state.body\n      });\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\n      this.setState({\n        body: ''\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          authenticated = _this$props.authenticated;\n    const errors = this.state.errors;\n    const commentFormMarkup = authenticated ? React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      name: \"body\",\n      type: \"text\",\n      label: \"Comment on scream\",\n      error: errors.comment ? true : false,\n      helperText: errors.comment,\n      value: this.state.body,\n      onChange: this.handleChange,\n      fullWidth: true,\n      className: classes.textField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"hr\", {\n      className: classes.visibleSeparator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })) : null;\n    return commentFormMarkup;\n  }\n\n}\n\nCommentForm.propTypes = {\n  submitComment: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  screamId: PropTypes.string.isRequired,\n  authenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  UI: state.UI,\n  authenticated: state.user.authenticated\n});\n\nexport default connect(mapStateToProps, {\n  submitComment\n})(withStyles(styles)(CommentForm));","map":{"version":3,"sources":["/Users/flatironloanerstudent/Desktop/birdbox-client/src/components/chirp/CommentForm.js"],"names":["React","Component","PropTypes","withStyles","Button","Grid","TextField","connect","submitComment","styles","theme","CommentForm","state","body","errors","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","props","screamId","componentWillReceiveProps","nextProps","UI","loading","render","classes","authenticated","commentFormMarkup","textAlign","comment","textField","button","visibleSeparator","propTypes","func","isRequired","object","string","bool","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n// MUI Stuff\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n// Redux stuff\nimport { connect } from 'react-redux';\nimport { submitComment } from '../../redux/actions/dataActions';\n\nconst styles = (theme) => ({\n  ...theme\n});\n\nclass CommentForm extends Component {\n  state = {\n    body: '',\n    errors: {}\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({ errors: nextProps.UI.errors });\n    }\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\n      this.setState({ body: '' });\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.submitComment(this.props.screamId, { body: this.state.body });\n  };\n\n  render() {\n    const { classes, authenticated } = this.props;\n    const errors = this.state.errors;\n\n    const commentFormMarkup = authenticated ? (\n      <Grid item sm={12} style={{ textAlign: 'center' }}>\n        <form onSubmit={this.handleSubmit}>\n          <TextField\n            name=\"body\"\n            type=\"text\"\n            label=\"Comment on scream\"\n            error={errors.comment ? true : false}\n            helperText={errors.comment}\n            value={this.state.body}\n            onChange={this.handleChange}\n            fullWidth\n            className={classes.textField}\n          />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n          >\n            Submit\n          </Button>\n        </form>\n        <hr className={classes.visibleSeparator} />\n      </Grid>\n    ) : null;\n    return commentFormMarkup;\n  }\n}\n\nCommentForm.propTypes = {\n  submitComment: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  screamId: PropTypes.string.isRequired,\n  authenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  UI: state.UI,\n  authenticated: state.user.authenticated\n});\n\nexport default connect(\n  mapStateToProps,\n  { submitComment }\n)(withStyles(styles)(CommentForm));"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"/Users/flatironloanerstudent/Desktop/birdbox-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_USER, SET_AUTHENTICATED, SET_UNAUTHENTICATED, LOADING_USER, LIKE_CHIRP, UNLIKE_CHIRP, MARK_NOTIFICATIONS_READ } from '../types';\nconst initialState = {\n  authenticated: false,\n  loading: false,\n  credentials: {},\n  likes: [],\n  notifications: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_AUTHENTICATED:\n      return _objectSpread({}, state, {\n        authenticated: true\n      });\n\n    case SET_UNAUTHENTICATED:\n      return initialState;\n\n    case SET_USER:\n      return _objectSpread({\n        authenticated: true,\n        loading: false\n      }, action.payload);\n\n    case LOADING_USER:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case LIKE_CHIRP:\n      return _objectSpread({}, state, {\n        likes: [...state.likes, {\n          userHandle: state.credentials.handle,\n          chirpId: action.payload.chirpId\n        }]\n      });\n\n    case UNLIKE_CHIRP:\n      return _objectSpread({}, state, {\n        likes: state.likes.filter(like => like.chirpId !== action.payload.chirpId)\n      });\n\n    case MARK_NOTIFICATIONS_READ:\n      state.notifications.forEach(not => not.read = true);\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/flatironloanerstudent/Desktop/birdbox-client/src/redux/reducers/userReducer.js"],"names":["SET_USER","SET_AUTHENTICATED","SET_UNAUTHENTICATED","LOADING_USER","LIKE_CHIRP","UNLIKE_CHIRP","MARK_NOTIFICATIONS_READ","initialState","authenticated","loading","credentials","likes","notifications","state","action","type","payload","userHandle","handle","chirpId","filter","like","forEach","not","read"],"mappings":";;;;;;AAAA,SACIA,QADJ,EAEIC,iBAFJ,EAGIC,mBAHJ,EAIIC,YAJJ,EAKIC,UALJ,EAMIC,YANJ,EAOIC,uBAPJ,QAQS,UART;AAUE,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,WAAW,EAAE,EAHM;AAInBC,EAAAA,KAAK,EAAE,EAJY;AAKnBC,EAAAA,aAAa,EAAE;AALI,CAArB;AAQA,eAAe,UAASC,KAAK,GAAGN,YAAjB,EAA+BO,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,iBAAL;AACE,+BACKY,KADL;AAEEL,QAAAA,aAAa,EAAE;AAFjB;;AAIF,SAAKN,mBAAL;AACE,aAAOK,YAAP;;AACF,SAAKP,QAAL;AACE;AACEQ,QAAAA,aAAa,EAAE,IADjB;AAEEC,QAAAA,OAAO,EAAE;AAFX,SAGKK,MAAM,CAACE,OAHZ;;AAKF,SAAKb,YAAL;AACE,+BACKU,KADL;AAEEJ,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKL,UAAL;AACE,+BACKS,KADL;AAEEF,QAAAA,KAAK,EAAE,CACL,GAAGE,KAAK,CAACF,KADJ,EAEL;AACEM,UAAAA,UAAU,EAAEJ,KAAK,CAACH,WAAN,CAAkBQ,MADhC;AAEEC,UAAAA,OAAO,EAAEL,MAAM,CAACE,OAAP,CAAeG;AAF1B,SAFK;AAFT;;AAUF,SAAKd,YAAL;AACE,+BACKQ,KADL;AAEEF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYS,MAAZ,CACJC,IAAD,IAAUA,IAAI,CAACF,OAAL,KAAiBL,MAAM,CAACE,OAAP,CAAeG,OADrC;AAFT;;AAMF,SAAKb,uBAAL;AACEO,MAAAA,KAAK,CAACD,aAAN,CAAoBU,OAApB,CAA6BC,GAAD,IAAUA,GAAG,CAACC,IAAJ,GAAW,IAAjD;AACA,+BACKX,KADL;;AAGF;AACE,aAAOA,KAAP;AA3CJ;AA6CD","sourcesContent":["import {\n    SET_USER,\n    SET_AUTHENTICATED,\n    SET_UNAUTHENTICATED,\n    LOADING_USER,\n    LIKE_CHIRP,\n    UNLIKE_CHIRP,\n    MARK_NOTIFICATIONS_READ\n  } from '../types';\n  \n  const initialState = {\n    authenticated: false,\n    loading: false,\n    credentials: {},\n    likes: [],\n    notifications: []\n  };\n  \n  export default function(state = initialState, action) {\n    switch (action.type) {\n      case SET_AUTHENTICATED:\n        return {\n          ...state,\n          authenticated: true\n        };\n      case SET_UNAUTHENTICATED:\n        return initialState;\n      case SET_USER:\n        return {\n          authenticated: true,\n          loading: false,\n          ...action.payload\n        };\n      case LOADING_USER:\n        return {\n          ...state,\n          loading: true\n        };\n      case LIKE_CHIRP:\n        return {\n          ...state,\n          likes: [\n            ...state.likes,\n            {\n              userHandle: state.credentials.handle,\n              chirpId: action.payload.chirpId\n            }\n          ]\n        };\n      case UNLIKE_CHIRP:\n        return {\n          ...state,\n          likes: state.likes.filter(\n            (like) => like.chirpId !== action.payload.chirpId\n          )\n        };\n      case MARK_NOTIFICATIONS_READ:\n        state.notifications.forEach((not) => (not.read = true));\n        return {\n          ...state\n        };\n      default:\n        return state;\n    }\n  }"]},"metadata":{},"sourceType":"module"}
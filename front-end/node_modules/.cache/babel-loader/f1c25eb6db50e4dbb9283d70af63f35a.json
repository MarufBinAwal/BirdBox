{"ast":null,"code":"var _jsxFileName = \"/Users/flatironloanerstudent/Desktop/birdbox-client/src/components/chirp/Chirp.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport PropTypes from 'prop-types';\nimport MyButton from '../../util/MyButton';\nimport DeleteChirp from './DeleteChirp';\nimport ChirpDialog from './ChirpDialog';\nimport LikeButton from './LikeButton'; // MUI Stuff\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography'; // Icons\n\nimport ChatIcon from '@material-ui/icons/Chat'; // Redux\n\nimport { connect } from 'react-redux';\nconst styles = {\n  card: {\n    position: 'relative',\n    display: 'flex',\n    marginBottom: 20\n  },\n  image: {\n    minWidth: 200\n  },\n  content: {\n    padding: 25,\n    objectFit: 'cover'\n  }\n};\n\nclass Chirp extends Component {\n  render() {\n    dayjs.extend(relativeTime);\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          _this$props$chirp = _this$props.chirp,\n          body = _this$props$chirp.body,\n          createdAt = _this$props$chirp.createdAt,\n          userImage = _this$props$chirp.userImage,\n          userHandle = _this$props$chirp.userHandle,\n          chirpId = _this$props$chirp.chirpId,\n          likeCount = _this$props$chirp.likeCount,\n          commentCount = _this$props$chirp.commentCount,\n          _this$props$user = _this$props.user,\n          authenticated = _this$props$user.authenticated,\n          handle = _this$props$user.credentials.handle;\n    const deleteButton = authenticated && userHandle === handle ? React.createElement(DeleteChirp, {\n      chirpId: chirpId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }) : null;\n    return React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(CardMedia, {\n      image: userImage,\n      title: \"Profile image\",\n      className: classes.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      component: Link,\n      to: \"/users/\".concat(userHandle),\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, userHandle), deleteButton, React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, dayjs(createdAt).fromNow()), React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, body), React.createElement(LikeButton, {\n      chirpId: chirpId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, likeCount, \" Likes\"), React.createElement(MyButton, {\n      tip: \"comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(ChatIcon, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, commentCount, \" comments\"), React.createElement(ChirpDialog, {\n      chirpId: chirpId,\n      userHandle: userHandle,\n      openDialog: this.props.openDialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })));\n  }\n\n}\n\nChirp.propTypes = {\n  user: PropTypes.object.isRequired,\n  chirp: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  openDialog: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Chirp));","map":{"version":3,"sources":["/Users/flatironloanerstudent/Desktop/birdbox-client/src/components/chirp/Chirp.js"],"names":["React","Component","withStyles","Link","dayjs","relativeTime","PropTypes","MyButton","DeleteChirp","ChirpDialog","LikeButton","Card","CardContent","CardMedia","Typography","ChatIcon","connect","styles","card","position","display","marginBottom","image","minWidth","content","padding","objectFit","Chirp","render","extend","props","classes","chirp","body","createdAt","userImage","userHandle","chirpId","likeCount","commentCount","user","authenticated","handle","credentials","deleteButton","fromNow","openDialog","propTypes","object","isRequired","bool","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport PropTypes from 'prop-types';\nimport MyButton from '../../util/MyButton';\nimport DeleteChirp from './DeleteChirp';\nimport ChirpDialog from './ChirpDialog';\nimport LikeButton from './LikeButton';\n// MUI Stuff\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n// Icons\nimport ChatIcon from '@material-ui/icons/Chat';\n// Redux\nimport { connect } from 'react-redux';\n\nconst styles = {\n  card: {\n    position: 'relative',\n    display: 'flex',\n    marginBottom: 20\n  },\n  image: {\n    minWidth: 200\n  },\n  content: {\n    padding: 25,\n    objectFit: 'cover'\n  }\n};\n\nclass Chirp extends Component {\n  render() {\n    dayjs.extend(relativeTime);\n    const {\n      classes,\n      chirp: {\n        body,\n        createdAt,\n        userImage,\n        userHandle,\n        chirpId,\n        likeCount,\n        commentCount\n      },\n      user: {\n        authenticated,\n        credentials: { handle }\n      }\n    } = this.props;\n\n    const deleteButton =\n      authenticated && userHandle === handle ? (\n        <DeleteChirp chirpId={chirpId} />\n      ) : null;\n    return (\n      <Card className={classes.card}>\n        <CardMedia\n          image={userImage}\n          title=\"Profile image\"\n          className={classes.image}\n        />\n        <CardContent className={classes.content}>\n          <Typography\n            variant=\"h5\"\n            component={Link}\n            to={`/users/${userHandle}`}\n            color=\"primary\"\n          >\n            {userHandle}\n          </Typography>\n          {deleteButton}\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {dayjs(createdAt).fromNow()}\n          </Typography>\n          <Typography variant=\"body1\">{body}</Typography>\n          <LikeButton chirpId={chirpId} />\n          <span>{likeCount} Likes</span>\n          <MyButton tip=\"comments\">\n            <ChatIcon color=\"primary\" />\n          </MyButton>\n          <span>{commentCount} comments</span>\n          <ChirpDialog\n            chirpId={chirpId}\n            userHandle={userHandle}\n            openDialog={this.props.openDialog}\n          />\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nChirp.propTypes = {\n  user: PropTypes.object.isRequired,\n  chirp: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  openDialog: PropTypes.bool\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Chirp));"]},"metadata":{},"sourceType":"module"}